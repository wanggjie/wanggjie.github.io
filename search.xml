<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>修改ElementUI文本域的placeholder颜色</title>
    <url>/2021/01/01/01%E4%BF%AE%E6%94%B9%E6%96%87%E6%9C%AC%E5%9F%9F%E7%9A%84placeholder%E9%A2%9C%E8%89%B2/</url>
    <content><![CDATA[<h1 id="修改文本域的placeholder颜色并取消拖拽"><a href="#修改文本域的placeholder颜色并取消拖拽" class="headerlink" title="修改文本域的placeholder颜色并取消拖拽"></a>修改文本域的placeholder颜色并取消拖拽</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.el-textarea</span> /deep/<span class="selector-class">.el-textarea__inner</span> &#123;</span><br><span class="line"> &amp;<span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#bfc4cc</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: MicrosoftYaHei, PingFangSC-Regular, HiraginoSansGB-W3,</span><br><span class="line">   HelveticaNeue, Helvetica, Arial;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//禁止拖拽</span><br><span class="line"><span class="selector-tag">textarea</span>&#123;</span><br><span class="line"> <span class="attribute">resize</span>:none;  <span class="comment">/* 取消拖拽 */</span></span><br><span class="line"> <span class="attribute">outline</span>: none;<span class="comment">/* 取消选中高亮 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>文本域</tag>
      </tags>
  </entry>
  <entry>
    <title>ip4/6及ip段的正则表达式校验</title>
    <url>/2021/01/03/02ip%E5%8F%8Aip%E6%AE%B5%E6%A0%A1%E9%AA%8C-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="ip4-x2F-6的正则表达式校验规则"><a href="#ip4-x2F-6的正则表达式校验规则" class="headerlink" title="ip4&#x2F;6的正则表达式校验规则"></a>ip4&#x2F;6的正则表达式校验规则</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ip4</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">validIp4</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (value == <span class="string">&quot;&quot;</span> || value == <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;请输入ip&quot;</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> ipv4 =</span><br><span class="line">          <span class="string">&quot;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`^(<span class="subst">$&#123;ipv4&#125;</span>)$`</span>);</span><br><span class="line">          <span class="comment">//let reg = /^($&#123;ipv4&#125;)$/</span></span><br><span class="line">        <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(value)) &#123;</span><br><span class="line">          <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;ip格式不正确&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">callback</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ip6</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">validIp6</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value) &#123;</span><br><span class="line">    <span class="keyword">const</span> ipv6 =</span><br><span class="line">      <span class="string">&quot;([\\da-fA-F]&#123;1,4&#125;:)&#123;6&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|::([\\da-fA-F]&#123;1,4&#125;:)&#123;0,4&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|([\\da-fA-F]&#123;1,4&#125;:):([\\da-fA-F]&#123;1,4&#125;:)&#123;0,3&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|([\\da-fA-F]&#123;1,4&#125;:)&#123;2&#125;:([\\da-fA-F]&#123;1,4&#125;:)&#123;0,2&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|([\\da-fA-F]&#123;1,4&#125;:)&#123;3&#125;:([\\da-fA-F]&#123;1,4&#125;:)&#123;0,1&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|([\\da-fA-F]&#123;1,4&#125;:)&#123;4&#125;:((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|([\\da-fA-F]&#123;1,4&#125;:)&#123;7&#125;[\\da-fA-F]&#123;1,4&#125;|:((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,6&#125;|:)|[\\da-fA-F]&#123;1,4&#125;:((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,5&#125;|:)|([\\da-fA-F]&#123;1,4&#125;:)&#123;2&#125;((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,4&#125;|:)|([\\da-fA-F]&#123;1,4&#125;:)&#123;3&#125;((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,3&#125;|:)|([\\da-fA-F]&#123;1,4&#125;:)&#123;4&#125;((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,2&#125;|:)|([\\da-fA-F]&#123;1,4&#125;:)&#123;5&#125;:([\\da-fA-F]&#123;1,4&#125;)?|([\\da-fA-F]&#123;1,4&#125;:)&#123;6&#125;:&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`^(<span class="subst">$&#123;ipv6&#125;</span>)$`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(value)) &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;ip格式不正确&quot;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">callback</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h1 id="ip4-x2F-6段的正则表达式校验规则"><a href="#ip4-x2F-6段的正则表达式校验规则" class="headerlink" title="ip4&#x2F;6段的正则表达式校验规则"></a>ip4&#x2F;6段的正则表达式校验规则</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">validIp</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (value == <span class="string">&quot;&quot;</span> || value == <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;请输入ip段&quot;</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> semicolon = <span class="string">&quot;[;；]&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> ipv4 =</span><br><span class="line">          <span class="string">&quot;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> mask = <span class="string">&quot;([1-9]|[1-2][0-9]|3[0-2])&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> ipv6WithMask =</span><br><span class="line">          <span class="string">&quot;([\\da-fA-F]&#123;1,4&#125;:)&#123;6&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|::([\\da-fA-F]&#123;1,4&#125;:)&#123;0,4&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:):([\\da-fA-F]&#123;1,4&#125;:)&#123;0,3&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;2&#125;:([\\da-fA-F]&#123;1,4&#125;:)&#123;0,2&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;3&#125;:([\\da-fA-F]&#123;1,4&#125;:)&#123;0,1&#125;((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;4&#125;:((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;7&#125;[\\da-fA-F]&#123;1,4&#125;(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|:((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,6&#125;|:)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|[\\da-fA-F]&#123;1,4&#125;:((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,5&#125;|:)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;2&#125;((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,4&#125;|:)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;3&#125;((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,3&#125;|:)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;4&#125;((:[\\da-fA-F]&#123;1,4&#125;)&#123;1,2&#125;|:)(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;5&#125;:([\\da-fA-F]&#123;1,4&#125;)?(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))|([\\da-fA-F]&#123;1,4&#125;:)&#123;6&#125;:(\\/([1-9]|[1-9]\\d|1[01]\\d|12[0-8]))&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(</span><br><span class="line">          <span class="string">`^((<span class="subst">$&#123;ipv4&#125;</span>\\/<span class="subst">$&#123;mask&#125;</span>)|(<span class="subst">$&#123;ipv6WithMask&#125;</span>))(<span class="subst">$&#123;semicolon&#125;</span>((<span class="subst">$&#123;ipv4&#125;</span>\\/<span class="subst">$&#123;mask&#125;</span>)|(<span class="subst">$&#123;ipv6WithMask&#125;</span>)))*$`</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(value)) &#123;</span><br><span class="line">          <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;格式不正确&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">callback</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>端口域名的正则表达式校验</title>
    <url>/2021/01/04/03%E7%AB%AF%E5%8F%A3%E5%9F%9F%E5%90%8D%E6%A0%A1%E9%AA%8C-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="端口域名的正则表达式校验规则"><a href="#端口域名的正则表达式校验规则" class="headerlink" title="端口域名的正则表达式校验规则"></a>端口域名的正则表达式校验规则</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在rules配置域名domain字段的正则表达式校验</span></span><br><span class="line"><span class="attr">rules</span>: &#123;</span><br><span class="line">  <span class="attr">domain</span>: [</span><br><span class="line">          <span class="comment">// 支持 泛域名 *.ctyun.cn</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">              <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>,</span><br><span class="line">              <span class="attr">pattern</span>: <span class="regexp">/^(\*\.|\*)?([a-zA-Z0-9]([a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?\.)+[a-zA-Z]&#123;2,6&#125;$/</span>,</span><br><span class="line">              <span class="attr">message</span>: <span class="string">&quot;请输入正确的域名&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置端口正则表达式校验的处理函数</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">valiPost</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (value == <span class="string">&quot;&quot;</span> || value == <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;请输入端口数字值&quot;</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="title class_">Post</span> =<span class="regexp">/^([0-9]|[1-9]\d|[1-9]\d&#123;2&#125;|[1-9]\d&#123;3&#125;|[1-5]\d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|6553[0-5])$/</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">Post</span>.<span class="title function_">test</span>(value)) &#123;</span><br><span class="line">          <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;端口不在合法范围&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">callback</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>去掉空格、换行的正则表达式</title>
    <url>/2021/01/13/05%E5%8E%BB%E6%8E%89%E7%A9%BA%E6%A0%BC%E6%A0%A1%E9%AA%8C-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="去掉空格、换行的正则表达式"><a href="#去掉空格、换行的正则表达式" class="headerlink" title="去掉空格、换行的正则表达式"></a>去掉空格、换行的正则表达式</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//去除空格 </span></span><br><span class="line"><span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">Trim</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&quot;&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//去除换行 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ClearBr</span>(<span class="params">key</span>) &#123; </span><br><span class="line">key = key.<span class="title function_">replace</span>(<span class="regexp">/&lt;\/?.+?&gt;/g</span>,<span class="string">&quot;&quot;</span>); </span><br><span class="line">key = key.<span class="title function_">replace</span>(<span class="regexp">/[\r\n]/g</span>, <span class="string">&quot;&quot;</span>); </span><br><span class="line"><span class="keyword">return</span> key; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//去除左侧空格 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">LTrim</span>(<span class="params">str</span>) &#123; </span><br><span class="line"><span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/^\s*/g</span>,<span class="string">&quot;&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//去右空格 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">RTrim</span>(<span class="params">str</span>) &#123; </span><br><span class="line"><span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/\s*$/g</span>,<span class="string">&quot;&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//去掉字符串两端的空格 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">trim</span>(<span class="params">str</span>) &#123; </span><br><span class="line"><span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">&quot;&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//去除字符串中间空格 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CTim</span>(<span class="params">str</span>) &#123; </span><br><span class="line"><span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/\s/g</span>,<span class="string">&#x27;&#x27;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>空格</tag>
      </tags>
  </entry>
  <entry>
    <title>前端获取响应头返回的字段</title>
    <url>/2021/01/10/04%E5%89%8D%E7%AB%AF%E8%8E%B7%E5%8F%96%E5%93%8D%E5%BA%94%E5%A4%B4%E8%BF%94%E5%9B%9E%E7%9A%84%E5%AD%97%E6%AE%B5/</url>
    <content><![CDATA[<h1 id="前端获取响应头返回的字段"><a href="#前端获取响应头返回的字段" class="headerlink" title="前端获取响应头返回的字段"></a>前端获取响应头返回的字段</h1><p>1：在导出文件的时候，有些文件名需要后端那边动态展示，后端便会在响应头返回某字段<br>2：前端需要知道怎么获取<br>3：有些后端也没有试过怎么从响应头返回字段，有些仅以为写某些字段在响应头就行<br>4：前端现在只看得到，去拿不到<br>4：此时后端需要在响应头上设置 Access-Control-Expose-Headers</p>
<p><img src="/2021/01/10/04%E5%89%8D%E7%AB%AF%E8%8E%B7%E5%8F%96%E5%93%8D%E5%BA%94%E5%A4%B4%E8%BF%94%E5%9B%9E%E7%9A%84%E5%AD%97%E6%AE%B5/01.png"></p>
]]></content>
      <tags>
        <tag>响应头</tag>
      </tags>
  </entry>
  <entry>
    <title>验证码流字符串转图片（*js-base64*）</title>
    <url>/2021/01/20/06%E9%AA%8C%E8%AF%81%E7%A0%81%E6%B5%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h1 id="验证码流字符串转图片（js-base64）"><a href="#验证码流字符串转图片（js-base64）" class="headerlink" title="验证码流字符串转图片（js-base64）"></a>验证码流字符串转图片（<em>js-base64</em>）</h1><p>1：下载第三方包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i js-base64</span><br></pre></td></tr></table></figure>


<h2 id="js-base64常规方法：编码-解码-乱码"><a href="#js-base64常规方法：编码-解码-乱码" class="headerlink" title="js-base64常规方法：编码-解码-乱码"></a>js-base64常规方法：编码-解码-乱码</h2><p>（官方文档<a href="https://www.npmjs.com/package/js-base64%EF%BC%89">https://www.npmjs.com/package/js-base64）</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 编码base64</span></span><br><span class="line"> <span class="title function_">getEncode64</span>(<span class="params">str</span>)&#123;</span><br><span class="line">     <span class="comment">// 对字符串进行编码</span></span><br><span class="line">     <span class="keyword">var</span> encode = <span class="built_in">encodeURI</span>(str);</span><br><span class="line">     <span class="comment">// 对编码的字符串转化base64</span></span><br><span class="line">     <span class="keyword">var</span> base64 = <span class="title function_">btoa</span>(encode);</span><br><span class="line">     <span class="keyword">return</span> base64;</span><br><span class="line">   &#125;,</span><br><span class="line">       </span><br><span class="line"><span class="comment">// base64转字符串解码</span></span><br><span class="line">   <span class="title function_">getDecode</span>(<span class="params">str</span>)&#123;</span><br><span class="line">      <span class="comment">// 对base64转编码</span></span><br><span class="line">      <span class="keyword">var</span> decode = <span class="title function_">atob</span>(base64);</span><br><span class="line">      <span class="comment">// 编码转字符串</span></span><br><span class="line">      <span class="keyword">var</span> str = <span class="built_in">decodeURI</span>(decode);</span><br><span class="line">      <span class="keyword">return</span> str;</span><br><span class="line">  &#125;,</span><br><span class="line">      </span><br><span class="line"><span class="comment">//问题：</span></span><br><span class="line">用上述的编码和解码，自己前端操作编译和解码中文都是没有问题的，但是由于需要后台，编码后传输到后台，后台返回编码格式再解码的时候就会出现中文乱码。</span><br><span class="line"></span><br><span class="line">原因：</span><br><span class="line">一番查找下来，可能是由于 常规的encode方法虽然界面上转的是utf-<span class="number">8</span>，但是实际上传输存储的时候格式还是utf-<span class="number">16</span>，后台返回的是utf-<span class="number">8</span>格式，用decode界面实际上转的是utf-<span class="number">16</span>,转utf-<span class="number">8</span>会出现中文乱码。也就是说上述的编码和解码，适用于页面本身编码解码，不适合传输用。</span><br><span class="line"></span><br><span class="line"><span class="comment">//解决解码中文乱码：</span></span><br><span class="line"><span class="title function_">getEncode64</span>(<span class="params">str</span>)&#123;   </span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">btoa</span>(<span class="built_in">encodeURIComponent</span>(str).<span class="title function_">replace</span>(<span class="regexp">/%([0-9A-F]&#123;2&#125;)/g</span>,</span><br><span class="line">          <span class="keyword">function</span> <span class="title function_">toSolidBytes</span>(<span class="params">match, p1</span>) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="string">&#x27;0x&#x27;</span> + p1);</span><br><span class="line">         &#125;));</span><br><span class="line">            </span><br><span class="line">  &#125;,</span><br><span class="line">      </span><br><span class="line"><span class="title function_">getDecode</span>(<span class="params">str</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="title function_">atob</span>(str).<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">c</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&#x27;%&#x27;</span> + (<span class="string">&#x27;00&#x27;</span> + c.<span class="title function_">charCodeAt</span>(<span class="number">0</span>).<span class="title function_">toString</span>(<span class="number">16</span>)).<span class="title function_">slice</span>(-<span class="number">2</span>);</span><br><span class="line">      &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure>

<h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      <tags>
        <tag>验证码</tag>
      </tags>
  </entry>
  <entry>
    <title>this.$set(),对象和数组的注入方式</title>
    <url>/2021/01/24/07this.$set%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E7%BB%84%E7%9A%84%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="this-set-对象和数组的注入方式"><a href="#this-set-对象和数组的注入方式" class="headerlink" title="this.$set(),对象和数组的注入方式"></a>this.$set(),对象和数组的注入方式</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对象</span></span><br><span class="line"><span class="variable language_">this</span>.$set(<span class="string">&#x27;&#123;object&#125;&#x27;</span>,<span class="string">&#x27;要添加注入的属性名&#x27;</span>,<span class="string">&#x27;设置的属性值&#x27;</span>)</span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="variable language_">this</span>.$set(<span class="string">&#x27;数组&#x27;</span>,<span class="title function_">index</span>(数组的下标),<span class="string">&#x27;要赋的值值&#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>$set</tag>
      </tags>
  </entry>
  <entry>
    <title>表单enter阻止事件</title>
    <url>/2021/02/02/08%E8%A1%A8%E5%8D%95enter%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="表单enter阻止事件"><a href="#表单enter阻止事件" class="headerlink" title="表单enter阻止事件"></a>表单enter阻止事件</h1><p>1：需要添加 @submit.native.prevent 事件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;el-form :inline=<span class="string">&quot;true&quot;</span> :model=<span class="string">&quot;search&quot;</span> @submit.<span class="property">native</span>.<span class="property">prevent</span>&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>表单</tag>
      </tags>
  </entry>
  <entry>
    <title>vue传值EventBus的坑</title>
    <url>/2021/02/05/09vue%E4%BC%A0%E5%80%BCEventBus%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<h1 id="vue传值EventBus的坑"><a href="#vue传值EventBus的坑" class="headerlink" title="vue传值EventBus的坑"></a>vue传值EventBus的坑</h1><h2 id="1：创建空js文件–src-utils-eventBus-js（路径）"><a href="#1：创建空js文件–src-utils-eventBus-js（路径）" class="headerlink" title="1：创建空js文件–src\utils\eventBus.js（路径）"></a>1：创建空js文件–src\utils\eventBus.js（路径）</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vue</span>()</span><br></pre></td></tr></table></figure>

<h2 id="2：在需要传值的-兄弟组件1-中导入并使用传值"><a href="#2：在需要传值的-兄弟组件1-中导入并使用传值" class="headerlink" title="2：在需要传值的 兄弟组件1 中导入并使用传值"></a>2：在需要传值的 兄弟组件1 中导入并使用传值</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入（兄弟组件1）</span></span><br><span class="line"><span class="keyword">import</span> eventBus <span class="keyword">from</span> <span class="string">&#x27;@/utils/eventBus&#x27;</span></span><br><span class="line"><span class="comment">//兄弟组件1传值给兄弟组件2</span></span><br><span class="line">eventBus.$emit(<span class="string">&#x27;sendFieldTableData&#x27;</span>, value)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 兄弟组件2接收兄弟组件1的传值（兄弟组件2）</span></span><br><span class="line">eventBus.$on(<span class="string">&#x27;sendFieldTableData&#x27;</span>, <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fieldTableData</span> = value</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<h2 id="3：eventBus的坑（每次使用需要-off来注销）"><a href="#3：eventBus的坑（每次使用需要-off来注销）" class="headerlink" title="3：eventBus的坑（每次使用需要$off来注销）"></a>3：eventBus的坑（每次使用需要$off来注销）</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//$on会多次触发</span></span><br><span class="line"><span class="comment">//在使用$on的组件必须要注销要不然会逐渐追加调用1+1+2+3</span></span><br><span class="line"><span class="title function_">creatr</span>(<span class="params"></span>)&#123;</span><br><span class="line">	eventBus.$on(<span class="string">&#x27;sendId&#x27;</span>, <span class="title function_">async</span>(item) =&gt; &#123;&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 销毁多次触发</span></span><br><span class="line">  eventBus.$off(<span class="string">&#x27;selfId&#x27;</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>vue传值</tag>
      </tags>
  </entry>
  <entry>
    <title>数组里的对象怎么排序</title>
    <url>/2021/02/07/10%E6%95%B0%E7%BB%84%E9%87%8C%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%80%8E%E4%B9%88%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="数组里的对象怎么排序sort"><a href="#数组里的对象怎么排序sort" class="headerlink" title="数组里的对象怎么排序sort()"></a>数组里的对象怎么排序sort()</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一般数组排序事例：</span></span><br><span class="line"><span class="keyword">var</span> presonArr = [<span class="number">2</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">22</span>,<span class="number">10</span>]</span><br><span class="line">presonArr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;	</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(presonArr);<span class="comment">//[1, 2, 3, 6, 9, 10, 22]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组里的对象排序</span></span><br><span class="line"><span class="keyword">var</span> presonArr = [</span><br><span class="line">	&#123; <span class="attr">name</span>:<span class="string">&#x27;freddy&#x27;</span>, <span class="attr">age</span>:<span class="number">24</span>, <span class="attr">score</span>:<span class="number">97</span> &#125;,</span><br><span class="line">	&#123; <span class="attr">name</span>:<span class="string">&#x27;nick&#x27;</span>, <span class="attr">age</span>:<span class="number">18</span>, <span class="attr">score</span>:<span class="number">87</span> &#125;,</span><br><span class="line">	&#123; <span class="attr">name</span>:<span class="string">&#x27;mike&#x27;</span>, <span class="attr">age</span>:<span class="number">26</span>, <span class="attr">score</span>:<span class="number">80</span> &#125;,</span><br><span class="line">	&#123; <span class="attr">name</span>:<span class="string">&#x27;james&#x27;</span>, <span class="attr">age</span>:<span class="number">34</span>, <span class="attr">score</span>:<span class="number">90</span> &#125;,</span><br><span class="line">	&#123; <span class="attr">name</span>:<span class="string">&#x27;curry&#x27;</span>, <span class="attr">age</span>:<span class="number">30</span>, <span class="attr">score</span>:<span class="number">83</span> &#125;</span><br><span class="line">];</span><br><span class="line">presonArr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">	<span class="keyword">return</span> a.<span class="property">age</span> - b.<span class="property">age</span>;	</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(presonArr);</span><br></pre></td></tr></table></figure>
<p><img src="/2021/02/07/10%E6%95%B0%E7%BB%84%E9%87%8C%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%80%8E%E4%B9%88%E6%8E%92%E5%BA%8F/01.png"></p>
]]></content>
      <tags>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>给Element的el-table表头加必选星号</title>
    <url>/2021/02/10/11%E7%BB%99el-table%E8%A1%A8%E5%A4%B4%E5%8A%A0%E5%BF%85%E9%80%89%E6%98%9F%E5%8F%B7/</url>
    <content><![CDATA[<h1 id="给Element的el-table表头加必选星号"><a href="#给Element的el-table表头加必选星号" class="headerlink" title="给Element的el-table表头加必选星号"></a>给Element的el-table表头加必选星号</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1：在el-table-column 上添加render-header属性。render-header指定列标题 Label 区域渲染使用的 Function</span></span><br><span class="line">&lt;el-table-column label=<span class="string">&quot;地域&quot;</span> align=<span class="string">&quot;center&quot;</span> :render-header=<span class="string">&quot;addRedStar&quot;</span>&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2：addRedStar函数</span></span><br><span class="line">  <span class="title function_">addRedStar</span>(<span class="params">h, &#123; column &#125;</span>) &#123; <span class="comment">// 给表头加必选标识</span></span><br><span class="line">     <span class="keyword">return</span> [<span class="title function_">h</span>(<span class="string">&#x27;span&#x27;</span>, &#123; <span class="attr">style</span>: <span class="string">&#x27;color: red&#x27;</span> &#125;, <span class="string">&#x27;*&#x27;</span>), <span class="title function_">h</span>(<span class="string">&#x27;span&#x27;</span>, <span class="string">&#x27; &#x27;</span> + column.<span class="property">label</span>)]</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>表格</tag>
      </tags>
  </entry>
  <entry>
    <title>判断数据类型的方法</title>
    <url>/2021/02/20/12%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="判断数据类型的方法"><a href="#判断数据类型的方法" class="headerlink" title="判断数据类型的方法"></a>判断数据类型的方法</h1><h3 id="下面是typeof、instanceof、constructor三种方法判断数据类型的用法"><a href="#下面是typeof、instanceof、constructor三种方法判断数据类型的用法" class="headerlink" title="下面是typeof、instanceof、constructor三种方法判断数据类型的用法"></a>下面是typeof、instanceof、constructor三种方法判断数据类型的用法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一种typeof</span></span><br><span class="line"><span class="keyword">let</span> obj=&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;dawn&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>:<span class="number">21</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> fn=<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是 function 类型&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="number">1</span>);       <span class="comment">//number</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="string">&#x27;abc&#x27;</span>);   <span class="comment">//string</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">true</span>);    <span class="comment">//boolean</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">undefined</span>);  <span class="comment">//undefined </span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> fn);      <span class="comment">//function</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> (<span class="keyword">new</span> <span class="title class_">Date</span>) );  <span class="comment">//object</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">null</span>);     <span class="comment">//object</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);  <span class="comment">//object</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> obj);      <span class="comment">//object</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//instanceof</span></span><br><span class="line"> <span class="keyword">let</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line">        <span class="keyword">let</span> obj=&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;dawn&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>:<span class="number">21</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> fn=<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是 function 类型&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(arr <span class="keyword">instanceof</span> <span class="title class_">Array</span>);  <span class="comment">//true</span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(obj <span class="keyword">instanceof</span> <span class="title class_">Object</span>);  <span class="comment">//true</span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(fn <span class="keyword">instanceof</span> <span class="title class_">Function</span>);  <span class="comment">//true</span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>((<span class="keyword">new</span> <span class="title class_">Date</span>) <span class="keyword">instanceof</span> <span class="title class_">Date</span>);  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//constructor</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">        <span class="keyword">let</span> obj = &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;dawn&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">21</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> fn = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是 function 类型&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>((<span class="number">9</span>).<span class="property">constructor</span> === <span class="title class_">Number</span>);  <span class="comment">//true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>.<span class="property">constructor</span> === <span class="title class_">String</span>);  <span class="comment">//true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span>.<span class="property">constructor</span> === <span class="title class_">Boolean</span>);  <span class="comment">//true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(fn.<span class="property">constructor</span> === <span class="title class_">Function</span>);  <span class="comment">//true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>((<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="property">constructor</span> === <span class="title class_">Date</span>);  <span class="comment">//true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">constructor</span> === <span class="title class_">Object</span>);  <span class="comment">//true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="property">constructor</span> === <span class="title class_">Array</span>);  <span class="comment">//true</span></span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>封装下载/导出文件流的api</title>
    <url>/2021/02/24/13%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E6%B5%81%E7%9A%84api%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<h1 id="封装下载-x2F-导出文件流的api"><a href="#封装下载-x2F-导出文件流的api" class="headerlink" title="封装下载&#x2F;导出文件流的api"></a>封装下载&#x2F;导出文件流的api</h1><h2 id="下载-x2F-导出-XXX-模板"><a href="#下载-x2F-导出-XXX-模板" class="headerlink" title="下载&#x2F;导出 XXX 模板"></a>下载&#x2F;导出 XXX 模板</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">downCancelTemplate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/v1/download&#x27;</span>,<span class="comment">//导出url</span></span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span><span class="comment">//转文件流（导出接口api一定要设置）</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="下载-x2F-导出模板按钮使用参考代码"><a href="#下载-x2F-导出模板按钮使用参考代码" class="headerlink" title="下载&#x2F;导出模板按钮使用参考代码"></a>下载&#x2F;导出模板按钮使用参考代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">downloadTemplateFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接口请求</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">downCancelTemplate</span>()</span><br><span class="line">    <span class="comment">// 创建一个url</span></span><br><span class="line">    <span class="keyword">const</span> fileUrl = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([res]))</span><br><span class="line">    <span class="comment">// 创建a标签</span></span><br><span class="line">    <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    <span class="comment">// 通过样式隐藏a标签</span></span><br><span class="line">    link.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    <span class="comment">// 把url放到a标签中</span></span><br><span class="line">    link.<span class="property">href</span> = fileUrl</span><br><span class="line">    link.<span class="property">download</span> = <span class="string">`XXX 模板.xlsx`</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(link)</span><br><span class="line">    link.<span class="title function_">click</span>()</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(link)</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">revokeObjectURL</span>(fileUrl)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(err.<span class="property">msg</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>文件流</tag>
      </tags>
  </entry>
  <entry>
    <title>阻止事件冒泡(@click.native.stop)</title>
    <url>/2021/03/10/14%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/</url>
    <content><![CDATA[<h1 id="阻止事件冒泡-click-native-stop"><a href="#阻止事件冒泡-click-native-stop" class="headerlink" title="阻止事件冒泡(@click.native.stop)"></a>阻止事件冒泡(@click.native.stop)</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;el-button @click.<span class="property">native</span>.<span class="property">stop</span>&gt;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>事件冒泡</tag>
      </tags>
  </entry>
  <entry>
    <title>递归树排序</title>
    <url>/2021/04/01/16%E9%80%92%E5%BD%92%E6%A0%91%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="递归树排序"><a href="#递归树排序" class="headerlink" title="递归树排序"></a>递归树排序</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 递归树排序</span></span><br><span class="line">    <span class="title function_">treeStore</span>(<span class="params">val</span>) &#123;</span><br><span class="line">      val.<span class="property">children</span> &amp;&amp; val.<span class="property">children</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item1</span> =&gt;</span> &#123;</span><br><span class="line">        item1.<span class="property">children</span> &amp;&amp; item1.<span class="property">children</span>.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">before, after</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> before.<span class="property">sort</span> - after.<span class="property">sort</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">treeStore</span>(item1)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>当文本行超出宽度时换行</title>
    <url>/2021/03/19/15%E5%BD%93%E6%96%87%E6%9C%AC%E8%A1%8C%E8%B6%85%E5%87%BA%E5%AE%BD%E5%BA%A6%E6%8D%A2%E8%A1%8C/</url>
    <content><![CDATA[<h1 id="当文本行超出宽度时换行"><a href="#当文本行超出宽度时换行" class="headerlink" title="当文本行超出宽度时换行"></a>当文本行超出宽度时换行</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//给span添加属性</span></span><br><span class="line"> word-<span class="attr">break</span>: <span class="keyword">break</span>-all; <span class="regexp">/如果单词超过宽度了，整个单词打散，超过的部分换行 */</span></span><br><span class="line"> white-<span class="attr">space</span>: normal; <span class="regexp">/ 重点是这个属性 */</span></span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>文本换行</tag>
      </tags>
  </entry>
  <entry>
    <title>vuex辅助函数使用方法</title>
    <url>/2021/04/08/17vuex%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="vuex辅助函数使用方法"><a href="#vuex辅助函数使用方法" class="headerlink" title="vuex辅助函数使用方法"></a>vuex辅助函数使用方法</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//vuex辅助函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; mapState，mapMutations，mapActions，mapGetters &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapState</span>([<span class="string">&#x27;count&#x27;</span>])，</span><br><span class="line">    ...<span class="title function_">mapGetters</span>([<span class="string">&#x27;filterList&#x27;</span>])</span><br><span class="line">  &#125;,</span><br><span class="line"> <span class="attr">methods</span>:&#123;</span><br><span class="line">     ...<span class="title function_">mapMutations</span>([<span class="string">&#x27;addCount&#x27;</span>])，</span><br><span class="line">    ...<span class="title function_">mapActions</span>([<span class="string">&#x27;getAsyncCount&#x27;</span>])，</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>vuex</tag>
      </tags>
  </entry>
  <entry>
    <title>字体添加渐变颜色</title>
    <url>/2021/04/11/18%E5%AD%97%E4%BD%93%E6%B7%BB%E5%8A%A0%E6%B8%90%E5%8F%98%E9%A2%9C%E8%89%B2/</url>
    <content><![CDATA[<h1 id="字体添加渐变颜色"><a href="#字体添加渐变颜色" class="headerlink" title="字体添加渐变颜色"></a>字体添加渐变颜色</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//字体渐变</span><br><span class="line"><span class="selector-class">.text</span>&#123;  </span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-image</span>:<span class="built_in">-webkit-linear-gradient</span>(bottom,red,<span class="number">#fd8403</span>,yellow); </span><br><span class="line"></span><br><span class="line">    -webkit-<span class="attribute">background-clip</span>:text; </span><br><span class="line"></span><br><span class="line">    -webkit-text-fill-<span class="attribute">color</span>:transparent; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css实现文字循环滚动效果</title>
    <url>/2021/04/18/19css%E5%AE%9E%E7%8E%B0%E6%96%87%E5%AD%97%E5%BE%AA%E7%8E%AF%E6%BB%9A%E5%8A%A8%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="css实现文字循环滚动效果"><a href="#css实现文字循环滚动效果" class="headerlink" title="css实现文字循环滚动效果"></a>css实现文字循环滚动效果</h1><h2 id="产品需求："><a href="#产品需求：" class="headerlink" title="产品需求："></a>产品需求：</h2><p>  在公司项目，产品要求在首页上添加一个公告文本循环滚动</p>
<p><img src="/2021/04/18/19css%E5%AE%9E%E7%8E%B0%E6%96%87%E5%AD%97%E5%BE%AA%E7%8E%AF%E6%BB%9A%E5%8A%A8%E6%95%88%E6%9E%9C/01.png"></p>
<h2 id="页面结构："><a href="#页面结构：" class="headerlink" title="页面结构："></a>页面结构：</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      css实现文字循环滚动效果css实现文字循环滚动效果css实现文字循环滚动效果</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h2 id="在css添加animation并引用："><a href="#在css添加animation并引用：" class="headerlink" title="在css添加animation并引用："></a>在css添加animation并引用：</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">200px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">12s</span> wordsLoop linear infinite normal;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> wordsLoop &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> wordsLoop &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css 省略号动画（请稍等...）</title>
    <url>/2021/04/25/20css%E7%9C%81%E7%95%A5%E5%8F%B7%E9%97%AA%E7%83%81%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<h1 id="css-省略号动画（请稍等…）"><a href="#css-省略号动画（请稍等…）" class="headerlink" title="css 省略号动画（请稍等…）"></a>css 省略号动画（请稍等…）</h1><h2 id="产品需求："><a href="#产品需求：" class="headerlink" title="产品需求："></a>产品需求：</h2><p>  在项目中，在某页面的控制台上需要添加（加载中，请稍等…）提示语，要求后面的省略号跳动</p>
<p><img src="/2021/04/25/20css%E7%9C%81%E7%95%A5%E5%8F%B7%E9%97%AA%E7%83%81%E5%8A%A8%E7%94%BB/01.png"></p>
<h2 id="页面结构："><a href="#页面结构：" class="headerlink" title="页面结构："></a>页面结构：</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-text&quot;</span>&gt;</span>加载中，请稍等<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;box-text-drop&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h2 id="在css添加animation并引用："><a href="#在css添加animation并引用：" class="headerlink" title="在css添加animation并引用："></a>在css添加animation并引用：</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"><span class="selector-class">.box-text-drop</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: simsun; <span class="comment">/*固定字体避免设置的宽度无效*/</span></span><br><span class="line">    <span class="attribute">animation</span>: dropMove <span class="number">1s</span> infinite step-start;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1.5em</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: bottom; <span class="comment">/*始终让省略号在文字的下面*/</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> dropMove &#123; <span class="comment">/*动态改变显示宽度, 但始终让总占据空间不变, 避免抖动*/</span></span><br><span class="line">    <span class="number">0%</span> &#123; <span class="attribute">width</span>: <span class="number">0</span>; <span class="attribute">margin-right</span>: <span class="number">1.5em</span>; &#125;</span><br><span class="line">    <span class="number">33%</span> &#123; <span class="attribute">width</span>: .<span class="number">5em</span>; <span class="attribute">margin-right</span>: <span class="number">1em</span>; &#125;</span><br><span class="line">    <span class="number">66%</span> &#123; <span class="attribute">width</span>: <span class="number">1em</span>; <span class="attribute">margin-right</span>: .<span class="number">5em</span>; &#125;</span><br><span class="line">    <span class="number">100%</span> &#123; <span class="attribute">width</span>: <span class="number">1.5em</span>; <span class="attribute">margin-right</span>: <span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css鼠标悬停盒子放大效果</title>
    <url>/2021/05/10/22css%E9%BC%A0%E6%A0%87%E6%82%AC%E5%81%9C%E7%9B%92%E5%AD%90%E6%94%BE%E5%A4%A7%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="css鼠标悬停盒子放大效果"><a href="#css鼠标悬停盒子放大效果" class="headerlink" title="css鼠标悬停盒子放大效果"></a>css鼠标悬停盒子放大效果</h1><h2 id="产品需求："><a href="#产品需求：" class="headerlink" title="产品需求："></a>产品需求：</h2><p>  在JQ项目中，产品要求把页面展示的卡片通过鼠标悬停的方式凸显&#x2F;放大的动效</p>
<h2 id="页面结构："><a href="#页面结构：" class="headerlink" title="页面结构："></a>页面结构：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-item&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h2 id="在css添加盒子样式测试："><a href="#在css添加盒子样式测试：" class="headerlink" title="在css添加盒子样式测试："></a>在css添加盒子样式测试：</h2><p>有两种效果可参考，后续美化可根据产品需求自行调整</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box-item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  // 效果一：</span><br><span class="line">  // <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">20px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.296</span>);</span><br><span class="line">  // -webkit-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, -<span class="number">2px</span>, <span class="number">0</span>);</span><br><span class="line">  // <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, -<span class="number">20px</span>, <span class="number">0</span>);</span><br><span class="line">  // <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  // 效果二：</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">15px</span> <span class="number">#c8c8c8</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.6s</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>js将匹配到关键字使其变为红色</title>
    <url>/2021/05/07/21js%E5%B0%86%E5%8C%B9%E9%85%8D%E5%88%B0%E5%85%B3%E9%94%AE%E5%AD%97%E4%BD%BF%E5%85%B6%E5%8F%98%E4%B8%BA%E7%BA%A2%E8%89%B2/</url>
    <content><![CDATA[<h1 id="js将匹配到关键字使其变为红色"><a href="#js将匹配到关键字使其变为红色" class="headerlink" title="js将匹配到关键字使其变为红色"></a>js将匹配到关键字使其变为红色</h1><h2 id="产品需求："><a href="#产品需求：" class="headerlink" title="产品需求："></a>产品需求：</h2><p>  项目中，产品要求在一段文字中将关键词加粗、变为红色</p>
<p><img src="/2021/05/07/21js%E5%B0%86%E5%8C%B9%E9%85%8D%E5%88%B0%E5%85%B3%E9%94%AE%E5%AD%97%E4%BD%BF%E5%85%B6%E5%8F%98%E4%B8%BA%E7%BA%A2%E8%89%B2/01.png"></p>
<h2 id="页面结构："><a href="#页面结构：" class="headerlink" title="页面结构："></a>页面结构：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-text&quot;&gt;&lt;p id=&quot;box-text-p&quot;&gt;&#123;&#123; changeKeyRed(text,&#x27;破浪&#x27;) &#125;&#125;&lt;/p&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h2 id="在methods添加changeKeyRed处理函数："><a href="#在methods添加changeKeyRed处理函数：" class="headerlink" title="在methods添加changeKeyRed处理函数："></a>在methods添加changeKeyRed处理函数：</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">changeKeyRed</span>(<span class="params">str, keyWord</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (str != <span class="literal">null</span> &amp;&amp; keyWord != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> substr = <span class="string">&#x27;/&#x27;</span> + keyWord + <span class="string">&#x27;/g&#x27;</span></span><br><span class="line">        <span class="keyword">var</span> replaceStr = str.<span class="title function_">replace</span>(<span class="built_in">eval</span>(substr), <span class="string">&quot;&lt;span style=&#x27;color:red;font-weight:bold&#x27;&gt;&quot;</span> + keyWord + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> inText = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">`box-text-p`</span>)</span><br><span class="line">          inText.<span class="property">innerHTML</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(replaceStr))</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> replaceStr</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> str</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>js计算当前时间的前一天</title>
    <url>/2021/05/25/24js%E8%AE%A1%E7%AE%97%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E7%9A%84%E5%89%8D%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<h1 id="js计算当前时间的前一天"><a href="#js计算当前时间的前一天" class="headerlink" title="js计算当前时间的前一天"></a>js计算当前时间的前一天</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//js如何去当前时间前一天的时间</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Date</span> countDate = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> preDate = <span class="keyword">new</span> <span class="title class_">Date</span>(countDate.<span class="title function_">getTime</span>() - <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>); <span class="comment">//前一天</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nextDate = <span class="keyword">new</span> <span class="title class_">Date</span>(countDate.<span class="title function_">getTime</span>() + <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>); <span class="comment">//后一天</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>input输入框搜索处理不符合条件的校验</title>
    <url>/2021/06/01/25input%E6%90%9C%E7%B4%A2%E5%A4%84%E7%90%86%E4%B8%8D%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="input搜索处理不符合条件的校验"><a href="#input搜索处理不符合条件的校验" class="headerlink" title="input搜索处理不符合条件的校验"></a>input搜索处理不符合条件的校验</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><p>项目搜索条件有数字搜索的输入框，需要仅能输入数字</p>
<h2 id="处理方法："><a href="#处理方法：" class="headerlink" title="处理方法："></a>处理方法：</h2><blockquote>
<p>通过输入框的blur事件用replace()方法处理该需求</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a-input</span><br><span class="line">  v-model.trim=&quot;searchForm.refValueId&quot;</span><br><span class="line">  placeholder=&quot;请输入参考值标识&quot;</span><br><span class="line">  allow-clear</span><br><span class="line">  @blur=&quot;</span><br><span class="line">    () =&gt;</span><br><span class="line">      (searchForm.refValueId = searchForm.refValueId.replace(</span><br><span class="line">        /[^0-9]/g,</span><br><span class="line">        &#x27;&#x27;</span><br><span class="line">      ))</span><br><span class="line">  &quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>表单</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-count-to(数字滚动计时)</title>
    <url>/2021/06/25/26Vue-count-to(%E6%95%B0%E5%AD%97%E6%BB%9A%E5%8A%A8%E8%AE%A1%E6%97%B6)/</url>
    <content><![CDATA[<h1 id="Vue-count-to-数字滚动计时"><a href="#Vue-count-to-数字滚动计时" class="headerlink" title="Vue-count-to(数字滚动计时)"></a>Vue-count-to(数字滚动计时)</h1><h2 id="项目需求："><a href="#项目需求：" class="headerlink" title="项目需求："></a>项目需求：</h2><blockquote>
<p>项目首页的数量展示需要添加一个从 0-获取回来数量 的滚动效果</p>
</blockquote>
<h2 id="使用vue-count-to（数字滚动插件）："><a href="#使用vue-count-to（数字滚动插件）：" class="headerlink" title="使用vue-count-to（数字滚动插件）："></a>使用vue-count-to（数字滚动插件）：</h2><blockquote>
<p>官网：<a href="https://www.npmjs.com/package/vue-count-to">https://www.npmjs.com/package/vue-count-to</a></p>
</blockquote>
<p>1：下载插件依赖</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install vue-count-to</span><br></pre></td></tr></table></figure>
<p>2：页面使用插件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">import</span> countTo <span class="keyword">from</span> <span class="string">&quot;vue-count-to&quot;</span>;</span><br><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="attr">components</span>: &#123;</span><br><span class="line">    countTo</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">&lt;countTo :startVal=<span class="string">&#x27;startVal&#x27;</span> :endVal=<span class="string">&#x27;endVal&#x27;</span> :duration=<span class="string">&#x27;3000&#x27;</span>&gt;&lt;/countTo&gt;</span><br><span class="line"><span class="comment">//startVal开始值，endVal结束值，duration时间</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>获取屏幕缩放倍数</title>
    <url>/2021/07/03/27%E8%8E%B7%E5%8F%96%E5%B1%8F%E5%B9%95%E7%BC%A9%E6%94%BE%E5%80%8D%E6%95%B0/</url>
    <content><![CDATA[<h1 id="获取屏幕缩放倍数"><a href="#获取屏幕缩放倍数" class="headerlink" title="获取屏幕缩放倍数"></a>获取屏幕缩放倍数</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 屏幕缩放大小</span></span><br><span class="line">    <span class="title function_">detectZoom</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> ratio = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">const</span> screen = <span class="variable language_">window</span>.<span class="property">screen</span>;</span><br><span class="line">      <span class="keyword">const</span> ua = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span> !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">        ratio = <span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (~ua.<span class="title function_">indexOf</span>(<span class="string">&quot;msie&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (screen.<span class="property">deviceXDPI</span> &amp;&amp; screen.<span class="property">logicalXDPI</span>) &#123;</span><br><span class="line">          ratio = screen.<span class="property">deviceXDPI</span> / screen.<span class="property">logicalXDPI</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">outerWidth</span> !== <span class="literal">undefined</span> &amp;&amp;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">innerWidth</span> !== <span class="literal">undefined</span></span><br><span class="line">      ) &#123;</span><br><span class="line">        ratio = <span class="variable language_">window</span>.<span class="property">outerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (ratio) &#123;</span><br><span class="line">        ratio = <span class="title class_">Math</span>.<span class="title function_">round</span>(ratio * <span class="number">100</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> ratio;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="title function_">detectZoom</span>()) <span class="comment">//打印出来的结果要和你电脑本地设置的缩放大小计算（本地放大倍数*浏览器放大倍数/100）</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/03/27%E8%8E%B7%E5%8F%96%E5%B1%8F%E5%B9%95%E7%BC%A9%E6%94%BE%E5%80%8D%E6%95%B0/01.png"></p>
]]></content>
      <tags>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>css给箭头添加向上的动效</title>
    <url>/2021/05/20/23%E7%BB%99%E7%AE%AD%E5%A4%B4%E6%B7%BB%E5%8A%A0%E5%90%91%E4%B8%8A%E7%9A%84%E5%8A%A8%E6%95%88/</url>
    <content><![CDATA[<h1 id="css给箭头添加向上的动效"><a href="#css给箭头添加向上的动效" class="headerlink" title="css给箭头添加向上的动效"></a>css给箭头添加向上的动效</h1><h2 id="产品需求："><a href="#产品需求：" class="headerlink" title="产品需求："></a>产品需求：</h2><p>  在JQ项目，产品要求把两个箭头添加向上的一个动效效果</p>
<p><img src="/2021/05/20/23%E7%BB%99%E7%AE%AD%E5%A4%B4%E6%B7%BB%E5%8A%A0%E5%90%91%E4%B8%8A%E7%9A%84%E5%8A%A8%E6%95%88/01.png"></p>
<h2 id="页面结构："><a href="#页面结构：" class="headerlink" title="页面结构："></a>页面结构：</h2><p>(本次模拟用三角形来模拟，后续项目可以更替为图片，效果一样的)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-item&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h2 id="在css添加animation并引用："><a href="#在css添加animation并引用：" class="headerlink" title="在css添加animation并引用："></a>在css添加animation并引用：</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 三角形的一个样式处理 */</span></span><br><span class="line"><span class="selector-class">.box-item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">50px</span> <span class="number">100px</span> <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: transparent transparent <span class="number">#00adb5</span> transparent;</span><br><span class="line">  <span class="attribute">animation</span>: breathDown <span class="number">1.0s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> breathDown &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>) <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="number">10%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">5px</span>) <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">5px</span>) <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>ant组件可以通过尾部图标显示字数</title>
    <url>/2021/07/08/28ant%E7%BB%84%E4%BB%B6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E5%B0%BE%E9%83%A8%E5%9B%BE%E6%A0%87%E6%98%BE%E7%A4%BA%E5%AD%97%E6%95%B0/</url>
    <content><![CDATA[<h1 id="ant组件可以通过尾部图标显示字数"><a href="#ant组件可以通过尾部图标显示字数" class="headerlink" title="ant组件可以通过尾部图标显示字数"></a>ant组件可以通过尾部图标显示字数</h1><h2 id="在ant组件中vue2版本，没有在输入框查看可输入限制字数，可以通过suffix设置"><a href="#在ant组件中vue2版本，没有在输入框查看可输入限制字数，可以通过suffix设置" class="headerlink" title="在ant组件中vue2版本，没有在输入框查看可输入限制字数，可以通过suffix设置"></a>在ant组件中vue2版本，没有在输入框查看可输入限制字数，可以通过suffix设置</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;a-input</span><br><span class="line">  v-model=<span class="string">&quot;form.rule_name&quot;</span></span><br><span class="line">  :maxLength=<span class="string">&quot;30&quot;</span></span><br><span class="line">  allowClear</span><br><span class="line">  :suffix=<span class="string">&quot;(form.rule_name.length || 0) + &#x27;/30&#x27;&quot;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>表单</tag>
      </tags>
  </entry>
  <entry>
    <title>利用ES6 Set去重（ES6中最常用）</title>
    <url>/2021/07/12/29%E5%88%A9%E7%94%A8ES6%20Set%E5%8E%BB%E9%87%8D%EF%BC%88ES6%E4%B8%AD%E6%9C%80%E5%B8%B8%E7%94%A8%EF%BC%89/</url>
    <content><![CDATA[<h1 id="利用ES6-Set去重（ES6中最常用）"><a href="#利用ES6-Set去重（ES6中最常用）" class="headerlink" title="利用ES6 Set去重（ES6中最常用）"></a>利用ES6 Set去重（ES6中最常用）</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//利用ES6 Set去重（ES6中最常用）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">unique</span> (arr) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="keyword">new</span> <span class="title class_">Set</span>(arr))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;true&#x27;</span>,<span class="string">&#x27;true&#x27;</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="number">15</span>,<span class="number">15</span>,<span class="literal">false</span>,<span class="literal">false</span>, <span class="literal">undefined</span>,<span class="literal">undefined</span>, <span class="literal">null</span>,<span class="literal">null</span>, <span class="title class_">NaN</span>, <span class="title class_">NaN</span>,<span class="string">&#x27;NaN&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>,&#123;&#125;,&#123;&#125;];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">unique</span>(arr))</span><br><span class="line"> <span class="comment">//[1, &quot;true&quot;, true, 15, false, undefined, null, NaN, &quot;NaN&quot;, 0, &quot;a&quot;, &#123;&#125;, &#123;&#125;]</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>es6</tag>
      </tags>
  </entry>
  <entry>
    <title>遍历的表单项如何添加校验</title>
    <url>/2021/07/18/30%E9%81%8D%E5%8E%86%E7%9A%84%E8%A1%A8%E5%8D%95%E9%A1%B9%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="遍历的表单项如何添加校验"><a href="#遍历的表单项如何添加校验" class="headerlink" title="遍历的表单项如何添加校验"></a>遍历的表单项如何添加校验</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><blockquote>
<p>某页面新增某属性时，可以添加多条，此时就会添加多个相同的表单项，校验方式也是发生改变</p>
</blockquote>
<h2 id="处理方式："><a href="#处理方式：" class="headerlink" title="处理方式："></a>处理方式：</h2><blockquote>
<p>通过 + index + 的方法来实现<br>例：:prop&#x3D;”‘domains.’ + index + ‘.paramType’”</p>
</blockquote>
<h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;dynamicValidateForm&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;dynamicValidateForm&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;inline&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in dynamicValidateForm.domains&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">label</span>=<span class="string">&quot;城市&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&quot;display: flex&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prop</span>=<span class="string">&quot;&#x27;domains.&#x27; + index + &#x27;.paramType&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:rules</span>=<span class="string">&quot;rules.paramType&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;item.paramType&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择城市&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span> shanghai <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span> beijing <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">label</span>=<span class="string">&quot;类型&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&quot;display: flex&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prop</span>=<span class="string">&quot;&#x27;domains.&#x27; + index + &#x27;.valueType&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:rules</span>=<span class="string">&quot;rules.valueType&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;item.valueType&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择类型&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">value</span>=<span class="string">&quot;Zone one&quot;</span>&gt;</span> Zone one <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">value</span>=<span class="string">&quot;Zone two&quot;</span>&gt;</span> Zone two <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;内容&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: flex&quot;</span> <span class="attr">:prop</span>=<span class="string">&quot;&#x27;domains.&#x27; + index + &#x27;.value&#x27;&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules.value&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;item.value&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入内容&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 引入</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 注册</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dynamicValidateForm</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">domains</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">paramType</span>: <span class="literal">undefined</span>, <span class="attr">valueType</span>: <span class="literal">undefined</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">paramType</span>: <span class="literal">undefined</span>, <span class="attr">valueType</span>: <span class="literal">undefined</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">paramType</span>: <span class="literal">undefined</span>, <span class="attr">valueType</span>: <span class="literal">undefined</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">paramType</span>: <span class="literal">undefined</span>, <span class="attr">valueType</span>: <span class="literal">undefined</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 校验</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">rules</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">value</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: <span class="string">&#x27;请选择城市&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">valueType</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: <span class="string">&#x27;请选择类型&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">trigger</span>: <span class="string">&#x27;change&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">paramType</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入内容&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;change&#x27;</span> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.box</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>表单</tag>
      </tags>
  </entry>
  <entry>
    <title>表格中的表单项如何添加校验</title>
    <url>/2021/07/24/31%E8%A1%A8%E6%A0%BC%E4%B8%AD%E7%9A%84%E8%A1%A8%E5%8D%95%E9%A1%B9%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="表格中的表单项如何添加校验"><a href="#表格中的表单项如何添加校验" class="headerlink" title="表格中的表单项如何添加校验"></a>表格中的表单项如何添加校验</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><blockquote>
<p>某页面的表格项需要添加表单填写，并提交。</p>
</blockquote>
<h2 id="处理方式："><a href="#处理方式：" class="headerlink" title="处理方式："></a>处理方式：</h2><blockquote>
<p>也是和表单遍历处理的方式差不多，:prop&#x3D;”‘list.’+scope.$index+’.name’”</p>
</blockquote>
<h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;el-form ref=&quot;tableformRef&quot; :model=&quot;form&quot;&gt;</span><br><span class="line">      &lt;el-table :data=&quot;form.list&quot;&gt;</span><br><span class="line">        &lt;el-table-column</span><br><span class="line">          label=&quot;姓名&quot;</span><br><span class="line">          prop=&quot;name&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-form-item :prop=&quot;&#x27;list.&#x27;+scope.$index+&#x27;.name&#x27;&quot; :rules=&quot;rules.name&quot;&gt;</span><br><span class="line">              &lt;el-input v-model=&quot;scope.row.name&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column</span><br><span class="line">          label=&quot;性别&quot;</span><br><span class="line">          prop=&quot;sex&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-form-item :prop=&quot;&#x27;list.&#x27;+scope.$index+&#x27;.sex&#x27;&quot; :rules=&quot;rules.sex&quot;&gt;</span><br><span class="line">              &lt;el-input v-model=&quot;scope.row.sex&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column</span><br><span class="line">          label=&quot;年龄&quot;</span><br><span class="line">          prop=&quot;age&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-form-item :prop=&quot;&#x27;list.&#x27;+scope.$index+&#x27;.age&#x27;&quot; :rules=&quot;rules.age&quot;&gt;</span><br><span class="line">              &lt;el-input v-model=&quot;scope.row.age&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column</span><br><span class="line">          label=&quot;等级&quot;</span><br><span class="line">          prop=&quot;level&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-form-item :prop=&quot;&#x27;list.&#x27;+scope.$index+&#x27;.level&#x27;&quot; :rules=&quot;rules.level&quot;&gt;</span><br><span class="line">              &lt;el-input v-model=&quot;scope.row.level&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button @click=&quot;handleSubmit&quot;&gt;提交&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 引入</span><br><span class="line">export default &#123;</span><br><span class="line">  // 注册</span><br><span class="line">  components: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    const validatorAge = (rule, value, callback) =&gt; &#123;</span><br><span class="line">      if (!value) &#123;</span><br><span class="line">        callback(new Error(&#x27;年龄不能为空&#x27;))</span><br><span class="line">      &#125; else if (value &lt; 20 || value &gt; 50) &#123;</span><br><span class="line">        callback(new Error(&#x27;年龄输入错误&#x27;))</span><br><span class="line">      &#125; else callback()</span><br><span class="line">    &#125;</span><br><span class="line">    return &#123;</span><br><span class="line">      form: &#123;</span><br><span class="line">        list: [</span><br><span class="line">          &#123; id: &#x27;1&#x27;, name: &#x27;唐僧&#x27;, sex: &#x27;1&#x27;, age: &#x27;35&#x27;, level: 1, describe: &#x27;他是师傅&#x27; &#125;,</span><br><span class="line">          &#123; id: &#x27;2&#x27;, name: &#x27;孙悟空&#x27;, sex: &#x27;2&#x27;, age: &#x27;20&#x27;, level: 2, describe: &#x27;他是大师兄&#x27; &#125;,</span><br><span class="line">          &#123; id: &#x27;3&#x27;, name: &#x27;沙和尚&#x27;, sex: &#x27;1&#x27;, age: &#x27;30&#x27;, level: 4, describe: &#x27;他是三师弟&#x27; &#125;,</span><br><span class="line">          &#123; id: &#x27;4&#x27;, name: &#x27;猪八戒&#x27;, sex: &#x27;2&#x27;, age: &#x27;33&#x27;, level: 3, describe: &#x27;他是猪八戒&#x27; &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      rules: &#123;</span><br><span class="line">        name: &#123; required: true, message: &#x27;姓名不能为空&#x27; &#125;,</span><br><span class="line">        sex: &#123; required: true, message: &#x27;性别不能为空&#x27; &#125;,</span><br><span class="line">        age: [</span><br><span class="line">          &#123; required: true, validator: validatorAge &#125;</span><br><span class="line">        ],</span><br><span class="line">        level: &#123; required: true, message: &#x27;等级不能为空&#x27; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleSubmit() &#123;</span><br><span class="line">      this.$refs.tableformRef.validate(async valid =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          this.$message.success(&#x27;提交成功&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.box&#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>表单</tag>
      </tags>
  </entry>
  <entry>
    <title>后端返回base64字符串转图片</title>
    <url>/2021/08/20/32%E5%90%8E%E7%AB%AF%E8%BF%94%E5%9B%9Ebase64%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h1 id="后端返回base64字符串转图片"><a href="#后端返回base64字符串转图片" class="headerlink" title="后端返回base64字符串转图片"></a>后端返回base64字符串转图片</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><blockquote>
<p>后端返回的一串base64字符串，要求在页面展示图片</p>
</blockquote>
<h2 id="处理方式："><a href="#处理方式：" class="headerlink" title="处理方式："></a>处理方式：</h2><blockquote>
<p>可以通过图片标签的src路径前面添加 “data:image&#x2F;gif;base64,”</p>
</blockquote>
<h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img :src=&quot;&#x27;data:image/gif;base64,&#x27; + srcImg(后端返回的base64字符串)&quot; alt=&quot;&quot; style=&quot;width: 100px;height: 100px;&quot; ref=&quot;printform&quot; id=&quot;printform&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>base64</tag>
      </tags>
  </entry>
  <entry>
    <title>el-tree组件在内容超出长度时出现提示框</title>
    <url>/2021/09/04/33el-tree%E7%BB%84%E4%BB%B6%E5%9C%A8%E5%86%85%E5%AE%B9%E8%B6%85%E5%87%BA%E9%95%BF%E5%BA%A6%E6%97%B6%E5%87%BA%E7%8E%B0%E6%8F%90%E7%A4%BA%E6%A1%86/</url>
    <content><![CDATA[<h1 id="el-tree组件在内容超出长度时出现提示框"><a href="#el-tree组件在内容超出长度时出现提示框" class="headerlink" title="el-tree组件在内容超出长度时出现提示框"></a>el-tree组件在内容超出长度时出现提示框</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><blockquote>
<p>某页面的树形控件在超出规定长度时要省略号…,并且鼠标悬浮展示全部名称</p>
</blockquote>
<h2 id="处理方式："><a href="#处理方式：" class="headerlink" title="处理方式："></a>处理方式：</h2><blockquote>
<p>可以通过mouseover事件处理</p>
</blockquote>
<h2 id="优化点："><a href="#优化点：" class="headerlink" title="优化点："></a>优化点：</h2><blockquote>
<p>处理好了样式可能有问题，当超出时，鼠标悬浮右边会出现滚动条，可以再body标签那边添加overflow: hidden;</p>
</blockquote>
<h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-tree&quot;&gt;</span><br><span class="line">      &lt;el-tree</span><br><span class="line">        ref=&quot;tree&quot;</span><br><span class="line">        :data=&quot;treeData&quot;</span><br><span class="line">        node-key=&quot;label&quot;</span><br><span class="line">        :props=&quot;defaultProps&quot;</span><br><span class="line">        class=&quot;tree-wrap&quot;</span><br><span class="line">        :indent=&quot;40&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-tooltip slot-scope=&quot;&#123; node &#125;&quot; :disabled=&quot;showTitle&quot; effect=&quot;dark&quot; :content=&quot;tooltipTitle&quot; placement=&quot;top&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;span-ellipsis&quot; @mouseover=&quot;onShowNameTipsMouseenter&quot;&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/el-tooltip&gt;</span><br><span class="line">      &lt;/el-tree&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      treeData: [&#123;</span><br><span class="line">        label: &#x27;一级 11111111111111111111111111111&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 1-1111111111111111&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 1-1-11111111111111&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        label: &#x27;一级 222222222222222222222222222&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 2-111111111111111111111&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 2-1-111111111111111111111111&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          label: &#x27;二级 2-222222222222222222222222222&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 2-2-1&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        label: &#x27;一级 3&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 3-1&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 3-1-1&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          label: &#x27;二级 3-2&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 3-2-1&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;label&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      showTitle: false,</span><br><span class="line">      tooltipTitle: undefined</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onShowNameTipsMouseenter(e) &#123;</span><br><span class="line">      var target = e.target</span><br><span class="line">      const textLength = target.clientWidth</span><br><span class="line">      const containerLength = target.scrollWidth</span><br><span class="line">      if (textLength &lt; containerLength) &#123;</span><br><span class="line">        this.tooltipTitle = e.target.innerText</span><br><span class="line">        this.showTitle = false</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.showTitle = true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.box&#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line">.box-tree&#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 100%;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">&#125;</span><br><span class="line">.span-ellipsis &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  white-space: nowrap;</span><br><span class="line">  text-overflow: ellipsis;</span><br><span class="line">  margin-right: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>el-tree树控件</tag>
      </tags>
  </entry>
  <entry>
    <title>单行和多行超出宽度添加省略号</title>
    <url>/2021/09/14/34%E5%8D%95%E8%A1%8C%E5%92%8C%E5%A4%9A%E8%A1%8C%E8%B6%85%E5%87%BA%E5%AE%BD%E5%BA%A6%E6%B7%BB%E5%8A%A0%E7%9C%81%E7%95%A5%E5%8F%B7/</url>
    <content><![CDATA[<h1 id="单行和多行超出宽度添加省略号"><a href="#单行和多行超出宽度添加省略号" class="headerlink" title="单行和多行超出宽度添加省略号"></a>单行和多行超出宽度添加省略号</h1><h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-item&quot;&gt;</span><br><span class="line">      aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassssssssssssssssssdsdasdasdsd</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 引入</span><br><span class="line">export default &#123;</span><br><span class="line">  // 注册</span><br><span class="line">  components: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.box &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box-item &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 200px;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">  // 单行省略号</span><br><span class="line">  // white-space: nowrap;</span><br><span class="line">  // overflow: hidden;</span><br><span class="line">  // text-overflow: ellipsis;</span><br><span class="line">  // 多行的：</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  text-overflow: ellipsis;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: -webkit-box;</span><br><span class="line">  -webkit-line-clamp: 2;//多少行添加省略号</span><br><span class="line">  -webkit-box-orient: vertical;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>根据数据嵌套的最后一级id找父集合的id</title>
    <url>/2021/09/25/35%E6%A0%B9%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%B5%8C%E5%A5%97%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E7%BA%A7id%E6%89%BE%E7%88%B6%E9%9B%86%E5%90%88%E7%9A%84id/</url>
    <content><![CDATA[<h1 id="根据数据嵌套的最后一级id找父集合的id"><a href="#根据数据嵌套的最后一级id找父集合的id" class="headerlink" title="根据数据嵌套的最后一级id找父集合的id"></a>根据数据嵌套的最后一级id找父集合的id</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><blockquote>
<p>在表单中有级联框需要回显所以要查找出id父集合<br>（数据嵌套，递归）</p>
</blockquote>
<h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-item&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;handleClick&quot;&gt;测试按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      data: [&#123;</span><br><span class="line">        label: &#x27;一级 1&#x27;,</span><br><span class="line">        id: &#x27;1&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 1-1&#x27;,</span><br><span class="line">          id: &#x27;11&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 1-1-1&#x27;,</span><br><span class="line">            id: &#x27;111&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        label: &#x27;一级 2&#x27;,</span><br><span class="line">        id: &#x27;2&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 2-1&#x27;,</span><br><span class="line">          id: &#x27;21&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 2-1-1&#x27;,</span><br><span class="line">            id: &#x27;211&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick() &#123;</span><br><span class="line">      const ids = this.getHierarchyData(this.data, [&#x27;111&#x27;])</span><br><span class="line">      console.log(ids)</span><br><span class="line">    &#125;,</span><br><span class="line">    getHierarchyData(rawData, list) &#123;</span><br><span class="line">      const data = []</span><br><span class="line">      const find = (classifyList, id) =&gt; &#123;</span><br><span class="line">        const temp = [id]</span><br><span class="line">        const forFn = function(arr, id) &#123;</span><br><span class="line">          for (let i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">            const item = arr[i]</span><br><span class="line">            if (item.children) &#123;</span><br><span class="line">              const data1 = item.children.find((item1) =&gt; item1.id === id)</span><br><span class="line">              if (data1) &#123;</span><br><span class="line">                temp.unshift(item.id)</span><br><span class="line">                forFn(classifyList, item.id)</span><br><span class="line">                break</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                forFn(item.children, id)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        forFn(classifyList, id)</span><br><span class="line">        return temp</span><br><span class="line">      &#125;</span><br><span class="line">      list.forEach((str) =&gt; &#123;</span><br><span class="line">        data.push(find(rawData, str))</span><br><span class="line">      &#125;)</span><br><span class="line">      return data</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>根据最后一级id找name，或者根据最后一级name找id</title>
    <url>/2021/10/12/36%E6%A0%B9%E6%8D%AE%E6%9C%80%E5%90%8E%E4%B8%80%E7%BA%A7id%E6%89%BEname/</url>
    <content><![CDATA[<h1 id="根据最后一级id找name，或者根据最后一级name找id"><a href="#根据最后一级id找name，或者根据最后一级name找id" class="headerlink" title="根据最后一级id找name，或者根据最后一级name找id"></a>根据最后一级id找name，或者根据最后一级name找id</h1><h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-item&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;handleClick&quot;&gt;测试按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      data: [&#123;</span><br><span class="line">        label: &#x27;一级 1&#x27;,</span><br><span class="line">        id: &#x27;1&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 1-1&#x27;,</span><br><span class="line">          id: &#x27;11&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 1-1-1&#x27;,</span><br><span class="line">            id: &#x27;111&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        label: &#x27;一级 2&#x27;,</span><br><span class="line">        id: &#x27;2&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          label: &#x27;二级 2-1&#x27;,</span><br><span class="line">          id: &#x27;21&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;三级 2-1-1&#x27;,</span><br><span class="line">            id: &#x27;211&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick() &#123;</span><br><span class="line">      const ids = this.getGroupName(this.data, &#x27;111&#x27;)</span><br><span class="line">      console.log(ids)</span><br><span class="line">    &#125;,</span><br><span class="line">    getGroupName(data, idval) &#123;</span><br><span class="line">      let result = &#x27;&#x27;</span><br><span class="line">      if (!data) &#123;</span><br><span class="line">        return</span><br><span class="line">      &#125;</span><br><span class="line">      for (const item of data) &#123;</span><br><span class="line">        if (item.id === idval) &#123;</span><br><span class="line">          result = item.label</span><br><span class="line">          break</span><br><span class="line">        &#125; else if (item.children &amp;&amp; item.children.length &gt; 0) &#123;</span><br><span class="line">          const res = this.getGroupName(item.children, idval)</span><br><span class="line">          if (res) &#123; result = res; break &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      return result</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>vue请求后台JFIF格式文件流</title>
    <url>/2022/01/05/40vue%E8%AF%B7%E6%B1%82%E5%90%8E%E5%8F%B0JFIF%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E6%B5%81/</url>
    <content><![CDATA[<h1 id="vue请求后台JFIF格式文件流"><a href="#vue请求后台JFIF格式文件流" class="headerlink" title="vue请求后台JFIF格式文件流"></a>vue请求后台JFIF格式文件流</h1><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//封装请求api（封装方式1）</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getValidataCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/captcha.jpg&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;arraybuffer&#x27;</span><span class="comment">//重要设置</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 封装方式2</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getJFIF</span>(<span class="params">url, params</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span>&#123;</span><br><span class="line">        axios.<span class="title function_">get</span>(url, &#123;</span><br><span class="line">            <span class="attr">params</span>: params,</span><br><span class="line">            <span class="attr">responseType</span>: <span class="string">&#x27;arraybuffer&#x27;</span></span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">reject</span>(err.<span class="property">data</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入封装方式1</span></span><br><span class="line"><span class="keyword">import</span> &#123;getValidataCode &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/login&#x27;</span></span><br><span class="line"><span class="comment">/* 获取验证码图片 */</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getCaptcha</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getValidataCode</span>()</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">captchaImg</span> = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([res]))</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>文件流</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript最简洁根据parentId将数据递归成树状</title>
    <url>/2021/10/22/37js%E6%A0%B9%E6%8D%AEparentId%E5%B0%86%E6%95%B0%E6%8D%AE%E9%80%92%E5%BD%92%E6%88%90%E6%A0%91%E7%8A%B6/</url>
    <content><![CDATA[<h1 id="JavaScript最简洁根据parentId将数据递归成树状"><a href="#JavaScript最简洁根据parentId将数据递归成树状" class="headerlink" title="JavaScript最简洁根据parentId将数据递归成树状"></a>JavaScript最简洁根据parentId将数据递归成树状</h1><h2 id="完整的代码展示"><a href="#完整的代码展示" class="headerlink" title="完整的代码展示"></a>完整的代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box-item&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;handleClick&quot;&gt;测试按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 假设数据如下</span><br><span class="line">      data: [</span><br><span class="line">        &#123; id: 2, name: &#x27;研发部&#x27;, parentId: 1 &#125;,</span><br><span class="line">        &#123; id: 4, name: &#x27;行政人事部&#x27;, parentId: 1 &#125;,</span><br><span class="line">        &#123; id: 6, name: &#x27;行政人事部下面的行政&#x27;, parentId: 4 &#125;,</span><br><span class="line">        &#123; id: 7, name: &#x27;行政人事部下面的人力资源&#x27;, parentId: 4 &#125;,</span><br><span class="line">        &#123; id: 20, name: &#x27;研发下面的产品组&#x27;, parentId: 2 &#125;,</span><br><span class="line">        &#123; id: 21, name: &#x27;研发下面的测试组&#x27;, parentId: 2 &#125;,</span><br><span class="line">        &#123; id: 22, name: &#x27;研发下面的运维组&#x27;, parentId: 2 &#125;,</span><br><span class="line">        &#123; id: 23, name: &#x27;研发下面的前端组&#x27;, parentId: 2 &#125;,</span><br><span class="line">        &#123; id: 24, name: &#x27;研发下面的后台组&#x27;, parentId: 2 &#125;,</span><br><span class="line">        &#123; id: 25, name: &#x27;研发下面的移动开发组&#x27;, parentId: 2 &#125;,</span><br><span class="line">        &#123; id: 99, name: &#x27;移动组下面的组&#x27;, parentId: 25 &#125;,</span><br><span class="line">        &#123; id: 98, name: &#x27;移动组下面的组&#x27;, parentId: 25 &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick() &#123;</span><br><span class="line">      const ids = this.formatToTree(this.data, 1)</span><br><span class="line">      console.log(ids)</span><br><span class="line">    &#125;,</span><br><span class="line">    formatToTree(ary, pid) &#123;</span><br><span class="line">      return ary</span><br><span class="line">        .filter((item) =&gt;</span><br><span class="line">        // pid父级id</span><br><span class="line">        // 如果没有父id（第一次递归的时候）将所有父级查询出来</span><br><span class="line">        // 这里认为 item.parentId === 1 就是最顶层 需要根据业务调整</span><br><span class="line">          pid === undefined ? item.parentId === 1 : item.parentId === pid</span><br><span class="line">        )</span><br><span class="line">        .map((item) =&gt; &#123;</span><br><span class="line">          // 通过父节点ID查询所有子节点</span><br><span class="line">          item.children = this.formatToTree(ary, item.id)</span><br><span class="line">          return item</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>锚点简单案例</title>
    <url>/2022/01/25/41%E9%94%9A%E7%82%B9%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="锚点简单案例"><a href="#锚点简单案例" class="headerlink" title="锚点简单案例"></a>锚点简单案例</h1><h2 id="完整代码展示"><a href="#完整代码展示" class="headerlink" title="完整代码展示"></a>完整代码展示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;anchor-point&quot;&gt;</span><br><span class="line">    &lt;!-- 滚动区域 --&gt;</span><br><span class="line">    &lt;div class=&quot;scroll-content&quot; @scroll=&quot;onScroll&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;scroll-item&quot; style=&quot;height: 500px;background: #3a8ee6;&quot;&gt;一层&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;scroll-item&quot; style=&quot;height: 500px;background: red;&quot;&gt;二层&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;scroll-item&quot; style=&quot;height: 500px;background: #42b983&quot;&gt;三层&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;scroll-item&quot; style=&quot;height: 1000px;background: yellow;&quot;&gt;四层&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 按钮 --&gt;</span><br><span class="line">    &lt;div class=&quot;operation-btn&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-for=&quot;(item, index) in [&#x27;一层&#x27;,&#x27;二层&#x27;,&#x27;三层&#x27;,&#x27;四层&#x27;]&quot;</span><br><span class="line">        :key=&quot;index&quot;</span><br><span class="line">        :style=&quot;&#123;background: activeStep === index ? &#x27;red&#x27; : &#x27;#ffffff&#x27;&#125;&quot;</span><br><span class="line">        @click=&quot;jump(index)&quot;</span><br><span class="line">      &gt;&#123;&#123; item &#125;&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      activeStep: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 滚动触发按钮高亮</span><br><span class="line">    onScroll(e) &#123;</span><br><span class="line">      const scrollItems = document.querySelectorAll(&#x27;.scroll-item&#x27;)</span><br><span class="line">      console.log(e, scrollItems)</span><br><span class="line">      for (let i = scrollItems.length - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">        // 判断滚动条滚动距离是否大于当前滚动项可滚动距离</span><br><span class="line">        const judge = e.target.scrollTop &gt;= scrollItems[i].offsetTop - scrollItems[0].offsetTop</span><br><span class="line">        if (judge) &#123;</span><br><span class="line">          this.activeStep = i</span><br><span class="line">          break</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 点击切换锚点</span><br><span class="line">    jump(index) &#123;</span><br><span class="line">      const target = document.querySelector(&#x27;.scroll-content&#x27;)</span><br><span class="line">      const scrollItems = document.querySelectorAll(&#x27;.scroll-item&#x27;)</span><br><span class="line">      // 判断滚动条是否滚动到底部</span><br><span class="line">      if (target.scrollHeight &lt;= target.scrollTop + target.clientHeight) &#123;</span><br><span class="line">        this.activeStep = index</span><br><span class="line">      &#125;</span><br><span class="line">      const total = scrollItems[index].offsetTop - scrollItems[0].offsetTop // 锚点元素距离其offsetParent(这里是body)顶部的距离(待滚动的距离)</span><br><span class="line">      let distance = document.querySelector(&#x27;.scroll-content&#x27;).scrollTop // 滚动条距离滚动区域顶部的距离</span><br><span class="line">      // let distance = document.body.scrollTop || document.documentElement.scrollTop || window.pageYOffset // 滚动条距离滚动区域顶部的距离(滚动区域为窗口)</span><br><span class="line">      // 滚动动画实现, 使用setTimeout的递归实现平滑滚动，将距离细分为50小段，10ms滚动一次</span><br><span class="line">      // 计算每一小段的距离</span><br><span class="line">      let step = total / 50</span><br><span class="line">      if (total &gt; distance) &#123;</span><br><span class="line">        smoothDown(document.querySelector(&#x27;.scroll-content&#x27;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        const newTotal = distance - total</span><br><span class="line">        step = newTotal / 50</span><br><span class="line">        smoothUp(document.querySelector(&#x27;.scroll-content&#x27;))</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 参数element为滚动区域</span><br><span class="line">      function smoothDown(element) &#123;</span><br><span class="line">        if (distance &lt; total) &#123;</span><br><span class="line">          distance += step</span><br><span class="line">          element.scrollTop = distance</span><br><span class="line">          setTimeout(smoothDown.bind(this, element), 10)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          element.scrollTop = total</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 参数element为滚动区域</span><br><span class="line">      function smoothUp(element) &#123;</span><br><span class="line">        if (distance &gt; total) &#123;</span><br><span class="line">          distance -= step</span><br><span class="line">          element.scrollTop = distance</span><br><span class="line">          setTimeout(smoothUp.bind(this, element), 10)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          element.scrollTop = total</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // document.querySelectorAll(&#x27;.scroll-item&#x27;).forEach((item, index1) =&gt; &#123;</span><br><span class="line">      //   if (index === index1) &#123;</span><br><span class="line">      //     item.scrollIntoView(&#123;</span><br><span class="line">      //       block: &#x27;start&#x27;,</span><br><span class="line">      //       behavior: &#x27;smooth&#x27;</span><br><span class="line">      //     &#125;)</span><br><span class="line">      //   &#125;</span><br><span class="line">      // &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.anchor-point &#123;</span><br><span class="line">flex-basis: 100%;</span><br><span class="line">display: flex;</span><br><span class="line">overflow: hidden;</span><br><span class="line">.scroll-content &#123;</span><br><span class="line">  height: 500px;</span><br><span class="line">  width: 90%;</span><br><span class="line">  overflow: scroll;</span><br><span class="line">&#125;</span><br><span class="line">.operation-btn &#123;</span><br><span class="line">  width: 10%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>锚点</tag>
      </tags>
  </entry>
  <entry>
    <title>判断两数组是否一样</title>
    <url>/2021/11/02/38%E5%88%A4%E6%96%AD%E4%B8%A4%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E4%B8%80%E6%A0%B7/</url>
    <content><![CDATA[<h1 id="判断两数组是否一样"><a href="#判断两数组是否一样" class="headerlink" title="判断两数组是否一样"></a>判断两数组是否一样</h1><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// arr1//数组1</span></span><br><span class="line"><span class="comment">// arr2//数组2</span></span><br><span class="line">arr1.<span class="property">length</span> === arr2.<span class="property">length</span> &amp;&amp; arr1.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">v, i</span>) &#123; <span class="keyword">return</span> v === arr2[i] &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的富文本wangeditor</title>
    <url>/2021/11/18/39%E7%AE%80%E5%8D%95%E7%9A%84%E5%AF%8C%E6%96%87%E6%9C%ACwangeditor/</url>
    <content><![CDATA[<h1 id="简单的富文本wangeditor"><a href="#简单的富文本wangeditor" class="headerlink" title="简单的富文本wangeditor"></a>简单的富文本wangeditor</h1><h2 id="依赖包准备"><a href="#依赖包准备" class="headerlink" title="依赖包准备"></a>依赖包准备</h2><blockquote>
<p>下载依赖 npm i wangeditor<br>版本号：4.7.15</p>
</blockquote>
<h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;editor&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;getEditorContent&quot;</span>&gt;</span>获取内容<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> E <span class="keyword">from</span> <span class="string">&#x27;wangeditor&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;WangEditor&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">editor</span>: <span class="literal">null</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">createEditor</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 创建富文本</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">createEditor</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">editor</span> = <span class="keyword">new</span> <span class="title function_">E</span>(<span class="string">&#x27;#editor&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> &#123; editor &#125; = <span class="variable language_">this</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      editor.<span class="property">config</span>.<span class="property">uploadImgServer</span> = <span class="string">&#x27;/upload-img&#x27;</span> <span class="comment">// 服务器上传图片接口</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 设置编辑区域高度为 500px</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      editor.<span class="property">config</span>.<span class="property">height</span> = <span class="number">500</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      editor.<span class="title function_">create</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 获取富文本内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getEditorContent</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">editor</span>.<span class="property">txt</span>.<span class="title function_">html</span>())</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.left-menu</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">200px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.main</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>富文本</tag>
      </tags>
  </entry>
</search>
